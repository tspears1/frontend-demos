@use '../mixins/links' as *;
@use '../mixins/list' as *;
@use '../mixins/typography' as *;

@mixin rich-text() {
    --_list-padding-inline-start:                   var(--list-padding-inline-start, var(--size-fluid-4));
    --_text-max-inline-size:                        var(--text-max-inline-size, var(--size-content-4));
    --_text-color:                                  var(--text-color, var(--theme-color-text, var(--color-neutral-1000)));
    --_text-font-family:                            var(--text-font-family, var(--font-sans));
    --_text-font-size:                              var(--text-font-size, var(--paragraph-size-md));
    --_text-font-weight:                            var(--text-font-weight, var(--font-weight-regular));
    --_text-line-height:                            var(--text-line-height, var(--leading-paragraph));

    color: var(--_text-color);
    font-family: var(--_text-font-family);
    font-size: var(--_text-font-size);
    font-weight: var(--_text-font-weight);
    line-height: var(--_text-line-height);
    max-inline-size: var(--_text-max-inline-size);
    overflow-wrap: break-word;
    word-break: break-word;

    :where(p) {
        font-family: inherit;
        font-size: inherit;
        font-weight: inherit;
        line-height: inherit;
    }

    :where(a) {
        @include inline-link();
    }

    :where(ul, ol) {
        @include list();
    }

    :where(p, ul, ol, dl, blockquote, pre) {
        + * {
            margin-block-start: var(--size-3);
        }
    }

    :where(hr) {
        border-width: 0;
        color: var(--theme-color-accent, var(--color-primary-400));
        display: grid;
        margin-block: var(--section-padding-y, var(--size-fluid-4));
        place-items: center;

        &::before,
        &::after {
            grid-area: 1 / 1 / 1 / 1;
        }

        &::before {
            background: currentColor;
            block-size: 0.125rem;
            content: '';
            inline-size: 100%;
        }

        &::after {
            --_accent-size: 0.375rem;
            --_space-size: 0.5rem;
            --_space-color: var(--theme-color-background, var(--color-neutral-0));
            --_stop-1: var(--_space-size);
            --_stop-2: calc(var(--_accent-size) + var(--_space-size));

            background: repeating-linear-gradient(90deg, var(--_space-color), var(--_space-color) var(--_stop-1), currentColor var(--_stop-1), currentColor var(--_stop-2));
            block-size: var(--_accent-size);
            content: '';
            inline-size: calc((var(--_accent-size) * 3) + (var(--_space-size) * 4));
        }
    }

    :where(pre, code) {
        direction: ltr;
        text-align: start;
        white-space: pre;
        word-spacing: normal;
        word-break: normal;
        word-wrap: normal;
        -moz-tab-size: 4;
        -o-tab-size: 4;
        tab-size: 4;
        -webkit-hyphens: none;
        -moz-hyphens: none;
        -ms-hyphens: none;
        hyphens: none;
    }

    :where(code) {
        background: var(--theme-color-highlight, var(--color-neutral-500));
        border-radius: var(--radius-2);
        color: var(--theme-color-accent, var(--color-neutral-0));
        font-family: var(--font-mono);
        font-size: var(--text-font-size, 1em);
        letter-spacing: var(--tracking-wider);
        padding: 0.60em;
    }

    :where(pre) {
        --_pre-color-background:                var(--theme-color-highlight, var(--color-neutral-500));
        --_pre-padding-block-start:             var(--pre-padding-block-start, var(--size-3));
        --_pre-padding-block-end:               var(--pre-padding-block-end, var(--size-3));
        --_pre-padding-inline-start:            var(--pre-padding-inline-start, var(--size-3));
        --_pre-padding-inline-end:              var(--pre-padding-inline-end, var(--size-3));
        background: var(--_pre-color-background);
        border-radius: var(--radius-2);
        display: flex;
        inline-size: 100%;
        overflow: hidden;
        padding: var(--_pre-padding-block-start) 0 var(--_pre-padding-block-end);
        position: relative;

        &[data-lang] {
            --_pre-padding-block-start:        var(--pre-padding-block-start, var(--size-4));

            &::before {
                background: var(--theme-color-accent, var(--color-neutral-0));
                border-radius: var(--radius-2);
                color: var(--theme-color-background, var(--color-neutral-500));
                content: attr(data-lang);
                font-family: var(--font-mono);
                font-size: 0.625em;
                font-weight: var(--font-weight-bold);
                letter-spacing: var(--tracking-wider);
                line-height: 1;
                padding: 1em 0.75em;
                position: absolute;
                top: 0;
                right: 0;
                z-index: 1;
            }

            &::after {
                background-image:
                    linear-gradient(90deg,  var(--_pre-color-background) 0%, transparent calc(0.75em + var(--_pre-padding-inline-start))),
                    linear-gradient(270deg, var(--_pre-color-background) 0%, transparent calc(0.75em + var(--_pre-padding-inline-end)));
                content: '';
                inset: 0;
                pointer-events: none;
                position: absolute;
            }
        }

        :where(code) {
            background: none;
            border-radius: 0;
            overflow-x: auto;
            padding: 0 var(--_pre-padding-inline-end) 0 var(--_pre-padding-inline-start);
        }
    }

    :where(blockquote) {
        --quote-border-color: var(--theme-color-accent, var(--color-primary-500));
        --quote-border-width: 0.75rem;
        color: var(--theme-color-accent, var(--color-primary-500));
        font-family: var(--quote-font-family, var(--font-serif));
        font-size: var(--quote-font-size, 1.25em);
        font-style: italic;
        font-weight: var(--font-weight-bold);
        padding-inline-start: calc(var(--size-fluid-3) + var(--quote-border-width));
        padding-inline-end: var(--size-fluid-3);
        position: relative;

        &::before {
            background: var(--quote-border-color);
            block-size: 100%;
            border-radius: var(--radius-3);
            content: '';
            inline-size: var(--quote-border-width);
            inset: 0 auto auto 0;
            position: absolute;
        }

        :where(p) {
            font-family: inherit;
            font-size: inherit;
            font-weight: inherit;
            line-height: inherit;
        }

        :where(cite) {
            color: var(--theme-color-accent, var(--color-primary-500));
            font-family: var(--cite-font-family, var(--font-sans));
            font-size: var(--cite-font-size, 0.75em);
            font-style: normal;
            font-weight: var(--font-weight-medium);
        }
    }
}